import api from"../../scripts/api/index.js";import{rangeToArray}from"../../scripts/utilities/ranges.js";import{getDropdownValues}from"../../scripts/utilities/dropdown-checklist.js";import CategoryModal from"../../scripts/components/CategoryModal.min.js";import DifficultyDropdown from"../../scripts/components/DifficultyDropdown.min.js";import ClientBonusRoom from"../ClientBonusRoom.js";import Player from"../../../quizbowl/Player.js";import Team from"../../../quizbowl/Team.js";import SingleplayerBonusClient from"./SingleplayerBonusClient.js";const modeVersion="2025-01-14",queryVersion="2025-05-07",settingsVersion="2024-11-02",USER_ID="user",TEAM_ID="team",room=new ClientBonusRoom;room.players[USER_ID]=new Player(USER_ID),room.players[USER_ID].teamId=TEAM_ID,room.teams[TEAM_ID]=new Team(TEAM_ID);const client=new SingleplayerBonusClient(room,USER_ID),socket={send:a=>client.onmessage(a),sendToServer:a=>room.message(USER_ID,a)};if(room.sockets[TEAM_ID]=socket,document.getElementById("answer-form").addEventListener("submit",function(a){a.preventDefault(),a.stopPropagation();const b=document.getElementById("answer-input").value;socket.sendToServer({type:"give-answer",givenAnswer:b})}),document.getElementById("clear-stats").addEventListener("click",function(){this.blur(),room.sendToServer({type:"clear-stats"})}),document.getElementById("next").addEventListener("click",function(){this.blur(),"Skip"===this.innerHTML?socket.sendToServer({type:"skip"}):socket.sendToServer({type:"next"})}),document.getElementById("local-packet-input").addEventListener("change",function(){const a=this.files[0];if(a){const b=new window.FileReader;b.onload=function(b){try{const c=JSON.parse(b.target.result);socket.sendToServer({type:"upload-local-packet",packet:c,filename:a.name})}catch(a){window.alert("Invalid packet format")}},b.readAsText(a)}}),document.getElementById("packet-number").addEventListener("change",function(){const a=rangeToArray(this.value.trim(),room.setLength),b=a.some(a=>1>a||a>room.setLength);return b?void document.getElementById("packet-number").classList.add("is-invalid"):void(document.getElementById("packet-number").classList.remove("is-invalid"),socket.sendToServer({type:"set-packet-numbers",packetNumbers:a}))}),document.getElementById("report-question-submit").addEventListener("click",function(){api.reportQuestion(document.getElementById("report-question-id").value,document.getElementById("report-question-reason").value,document.getElementById("report-question-description").value)}),document.getElementById("reveal").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"start-answer"})}),document.getElementById("set-mode").addEventListener("change",function(){this.blur(),socket.sendToServer({type:"set-mode",mode:this.value})}),document.getElementById("set-name").addEventListener("change",function(){socket.sendToServer({type:"set-set-name",setName:this.value.trim()})}),document.getElementById("set-strictness").addEventListener("change",function(){this.blur(),socket.sendToServer({type:"set-strictness",strictness:this.value})}),document.getElementById("set-strictness").addEventListener("input",function(){document.getElementById("strictness-display").textContent=this.value}),document.getElementById("start").addEventListener("click",async function(){this.blur(),socket.sendToServer({type:"start"})}),document.getElementById("toggle-randomize-order").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-randomize-order",randomizeOrder:this.checked})}),document.getElementById("toggle-settings").addEventListener("click",function(){this.blur(),document.getElementById("buttons").classList.toggle("col-lg-9"),document.getElementById("buttons").classList.toggle("col-lg-12"),document.getElementById("content").classList.toggle("col-lg-9"),document.getElementById("content").classList.toggle("col-lg-12"),document.getElementById("settings").classList.toggle("d-none"),document.getElementById("settings").classList.toggle("d-lg-none")}),document.getElementById("toggle-show-history").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-show-history",showHistory:this.checked})}),document.getElementById("toggle-standard-only").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-standard-only",standardOnly:this.checked})}),document.getElementById("toggle-three-part-bonuses").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-three-part-bonuses",threePartBonuses:this.checked})}),document.getElementById("toggle-timer").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-timer",timer:this.checked})}),document.getElementById("type-to-answer").addEventListener("click",function(){this.blur(),socket.sendToServer({type:"toggle-type-to-answer",typeToAnswer:this.checked})}),document.getElementById("year-range-a").onchange=function(){const a=$("#slider").slider("values",0),b=$("#slider").slider("values",1);socket.sendToServer({type:"set-year-range",minYear:a,maxYear:b})},document.getElementById("year-range-b").onchange=function(){const a=$("#slider").slider("values",0),b=$("#slider").slider("values",1);socket.sendToServer({type:"set-year-range",minYear:a,maxYear:b})},document.addEventListener("keydown",a=>{if(!["INPUT","TEXTAREA","SELECT"].includes(document.activeElement.tagName))switch(a.key?.toLowerCase()){case" ":document.getElementById("reveal").click(),a.target===document.body&&a.preventDefault();break;case"e":return document.getElementById("toggle-settings").click();case"k":return document.getElementsByClassName("card-header-clickable")[0].click();case"n":return document.getElementById("next").click();case"s":return document.getElementById("start").click();case"t":return document.getElementsByClassName("star-bonus")[0].click();case"y":return navigator.clipboard.writeText(room.bonus._id??"");case"0":return document.getElementById(`checkbox-${room.pointsPerPart.length}`)?.click();case"1":return document.getElementById("checkbox-1").click();case"2":return document.getElementById("checkbox-2").click();case"3":return document.getElementById("checkbox-3").click();case"4":return document.getElementById("checkbox-4").click()}}),window.localStorage.getItem("singleplayer-bonus-mode"))try{const a=JSON.parse(window.localStorage.getItem("singleplayer-bonus-mode"));if(a.version!==modeVersion)throw new Error;socket.sendToServer({type:"set-mode",...a})}catch{window.localStorage.removeItem("singleplayer-bonus-mode")}let startingDifficulties=[];if(window.localStorage.getItem("singleplayer-bonus-query"))try{const a=JSON.parse(window.localStorage.getItem("singleplayer-bonus-query"));if(a.version!==queryVersion)throw new Error;room.categoryManager.import(a),room.query=a,socket.sendToServer({type:"set-packet-numbers",...a}),socket.sendToServer({type:"set-set-name",...a}),socket.sendToServer({type:"toggle-standard-only",...a}),socket.sendToServer({type:"toggle-three-part-bonuses",...a}),startingDifficulties=a.difficulties}catch{window.localStorage.removeItem("singleplayer-bonus-query")}if($(document).ready(function(){try{const a=JSON.parse(window.localStorage.getItem("singleplayer-bonus-query"));socket.sendToServer({type:"set-year-range",...a})}catch{}}),window.localStorage.getItem("singleplayer-bonus-settings"))try{const a=JSON.parse(window.localStorage.getItem("singleplayer-bonus-settings"));if(a.version!==settingsVersion)throw new Error;socket.sendToServer({type:"set-strictness",...a}),socket.sendToServer({type:"toggle-show-history",...a}),socket.sendToServer({type:"toggle-timer",...a}),socket.sendToServer({type:"toggle-type-to-answer",...a})}catch{window.localStorage.removeItem("singleplayer-bonus-settings")}ReactDOM.createRoot(document.getElementById("category-modal-root")).render(/*#__PURE__*/React.createElement(CategoryModal,{categoryManager:room.categoryManager,onClose:()=>socket.sendToServer({type:"set-categories",...room.categoryManager.export()})})),ReactDOM.createRoot(document.getElementById("difficulty-dropdown-root")).render(/*#__PURE__*/React.createElement(DifficultyDropdown,{startingDifficulties:startingDifficulties??[],onChange:()=>socket.sendToServer({type:"set-difficulties",difficulties:getDropdownValues("difficulties")})}));